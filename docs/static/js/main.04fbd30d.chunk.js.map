{"version":3,"sources":["Header/Header.tsx","Score/Score.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Live","useState","leagues","setLeagues","activeLeague","setActiveLeague","isError","setIsError","updateScore","fetch","mode","headers","then","res","json","catch","error","result","useEffect","setInterval","$","document","ready","date","Date","day","getDate","month","getMonth","today","getFullYear","attr","Select","id","value","onChange","e","target","handleActiveLeagueChange","MenuItem","map","item","index","leagueID","name","filter","matches","length","match","time","state","homeTeam","undefined","status","substring","lastIndexOf","homeScore","awayScore","awayTeam","matchID","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"6PAaeA,MAVf,WACE,OACE,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,iD,+CCoHOC,MArHf,WAAiB,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAE0BF,mBAAS,cAFnC,mBAEPG,EAFO,KAEOC,EAFP,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,KAKRC,EAAc,WAClBC,MAAM,6CAA8C,CAClDC,KAAM,OACNC,QAAS,CACP,8BAA+B,OAGlCC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GACNT,GAAW,MAEZK,MAAK,SAACK,GACLd,EAAWc,OAkCf,OARAC,qBAAU,WACRV,IACAW,aAAY,WACVX,MACC,MAvBHY,IAAEC,UAAUC,OAAM,WAChB,IAAIC,EAAO,IAAIC,KAEXC,EAAWF,EAAKG,UAChBC,EAAaJ,EAAKK,WAAa,EAG/BD,EAAQ,KAAIA,EAAQ,IAAMA,GAC1BF,EAAM,KAAIA,EAAM,IAAMA,GAE1B,IAAII,EALON,EAAKO,cAKG,IAAMH,EAAQ,IAAMF,EACvCL,IAAE,eAAeW,KAAK,QAASF,QAchC,IAGD,sBAAK9B,UAAU,gBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,cAChB,sBAAMA,UAAU,cAAhB,8BAGJ,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,8BAAf,WACe,IAAZO,GAAoB,qBAAKP,UAAU,YAAf,SAA2B,uEACnC,IAAZO,GACC,qBAAKP,UAAU,mBAAf,SACE,eAACiC,EAAA,EAAD,CAAQC,GAAG,eAAeC,MAAO9B,EAAc+B,SAAU,SAACC,GAAD,OAzBpC,SAACA,GAChC/B,EAAgB+B,EAAEC,OAAOH,OAwBsDI,CAAyBF,IAA9F,UACE,cAACG,EAAA,EAAD,CAAUL,MAAM,aAAhB,0BACa,IAAZ5B,GAAqBJ,EAAQsC,KAAI,SAACC,EAAWC,GAC5C,OACE,cAACH,EAAA,EAAD,CAAUL,MAAOO,EAAKE,SAAtB,SAAkCF,EAAKG,gBAMpC,IAAZtC,GAAqBJ,EAAQ2C,QAAO,SAACJ,GACpC,MAAqB,eAAjBrC,EACKqC,EAEAA,EAAKE,WAAavC,KAE1BoC,KAAI,SAACC,EAAWC,GACjB,OACE,sBAAKT,GAAIQ,EAAKE,SAA8B5C,UAAU,uCAAtD,UACE,qBAAKA,UAAU,sBAAf,SAAqC,sBAAMA,UAAU,aAAhB,SAA8B0C,EAAKG,SACxE,gCACE,kCACGH,EAAKK,QAAQC,OAAS,GAAKN,EAAKK,QAAQN,KAAI,SAACQ,GAC5C,OACE,6BACE,6BACE,sBAAKjD,UAAU,YAAf,UACE,sBAAMA,UAAU,QAAhB,SAAwB,4BAAIiD,EAAMC,KAAKC,UACvC,sBAAMnD,UAAU,WAAhB,SAA4BiD,EAAMG,gBAEXC,IAArBJ,EAAMC,KAAKC,MACT,sBAAMnD,UAAU,QAAhB,SAAwB,6CAAsBiD,EAAMC,KAAKI,OAAOC,UAAUN,EAAMC,KAAKI,OAAOE,YAAY,KAAO,EAAGP,EAAMC,KAAKI,OAAOE,YAAY,KAAO,GAA/H,oBAExB,sBAAMxD,UAAU,QAAhB,SAAwB,6CAAsBiD,EAAMQ,UAA5B,MAA0CR,EAAMS,UAAhD,oBAE5B,sBAAM1D,UAAU,WAAhB,SAA4BiD,EAAMU,iBAX/BV,EAAMW,YAiBM,IAAxBlB,EAAKK,QAAQC,QAAgB,6BAAI,6BAAI,qBAAKhD,UAAU,UAAf,SAAyB,+BAAM,2EAvB9C0C,EAAKE,sB,MCtDjCiB,MA5Bf,WACE,OACE,cAAC,IAAD,UACE,qBAAK3B,GAAG,UAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4B,KAAK,QAAQC,OAAQ,kBAC1B,qBAAK/D,UAAU,MAAf,SACE,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAO8D,KAAK,SAASC,OAAQ,kBAC3B,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UAGJ,cAAC,IAAD,CAAO8D,KAAK,IAAIC,OAAQ,kBACtB,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,kBCXCgE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASoD,eAAe,SAM1BV,M","file":"static/js/main.04fbd30d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.scss\";\n\nfunction Header() {\n  return (\n    <div className=\"headerContainer\">\n      <div className=\"header__title\">\n        <h2>ftbl.world</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport $ from \"jquery\";\nimport \"./Score.scss\";\n\nfunction Live() {\n  const [leagues, setLeagues] = useState([]);\n  const [activeLeague, setActiveLeague] = useState('AllLeagues');\n  const [isError, setIsError] = useState(false);\n\n  const updateScore = () => {\n    fetch('https://floating-crag-91660.herokuapp.com/', {\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n    })\n    .then((res) => res.json())\n    .catch((error) => {\n      setIsError(true);\n    })\n    .then((result) => {\n      setLeagues(result);\n      // const aLeagues = result.map((league: any) => league.leagueID);\n      // setAllLeagues(aLeagues);\n    });\n  };\n\n  const updateDate = () => {\n    $(document).ready(function() {\n      let date = new Date();\n  \n      let day: any = date.getDate();\n      let month: any = date.getMonth() + 1;\n      let year = date.getFullYear();\n  \n      if (month < 10) month = \"0\" + month;\n      if (day < 10) day = \"0\" + day;\n  \n      let today = year + \"-\" + month + \"-\" + day;       \n      $(\"#datepicker\").attr(\"value\", today);\n    });\n  };\n\n  const handleActiveLeagueChange = (e: any) => {\n    setActiveLeague(e.target.value);\n  };\n\n  useEffect(() => {\n    updateScore();\n    setInterval(() => {\n      updateScore();\n    }, 15000);\n    updateDate();\n  }, []);\n\n  return (\n    <div className=\"liveContainer\">\n      <div className=\"liveContainer__header\">\n        <div className=\"liveContainer__header__content\">\n          <span className=\"live__dot\"></span>\n          <span className=\"live__title\">Live Scores</span>\n        </div>\n      </div>\n      <div className=\"liveContainer__body\">\n        <div className=\"liveContainer__body__scores\">\n          {isError === true && <div className=\"errorPage\"><span>Cannot fetch the data right now.</span></div>}\n          {isError === false &&\n            <div className=\"league__selector\">\n              <Select id=\"leagueSelect\" value={activeLeague} onChange={(e: any) => handleActiveLeagueChange(e)}>\n                <MenuItem value=\"AllLeagues\">All Leagues</MenuItem>\n                {isError === false && leagues.map((item: any, index: any) => {\n                  return (\n                    <MenuItem value={item.leagueID} >{item.name}</MenuItem>\n                  )\n                })}\n              </Select>\n            </div>\n          }\n          {isError === false && leagues.filter((item: any) => {\n            if (activeLeague === \"AllLeagues\") {\n              return item;\n            } else {\n              return item.leagueID === activeLeague;\n            }\n          }).map((item: any, index: any) => {\n            return (\n              <div id={item.leagueID} key={item.leagueID} className=\"liveContainer__body__leagueContainer\">\n                <div className=\"leagueNameContainer\"><span className=\"leagueName\">{item.name}</span></div>\n                <table>\n                  <tbody>\n                    {item.matches.length > 0 && item.matches.map((match: any) => {\n                      return (\n                        <tr key={match.matchID}>\n                          <td>\n                            <div className=\"liveScore\">\n                              <span className=\"state\"><b>{match.time.state}</b></span>\n                              <span className=\"homeTeam\">{match.homeTeam}</span>\n                              {\n                                match.time.state === undefined ?\n                                  <span className=\"score\"><b>&nbsp;&nbsp;&nbsp;{match.time.status.substring(match.time.status.lastIndexOf(\"(\") + 1, match.time.status.lastIndexOf(\"M\") + 1)}&nbsp;&nbsp;&nbsp;</b></span>\n                                  :\n                                  <span className=\"score\"><b>&nbsp;&nbsp;&nbsp;{match.homeScore} - {match.awayScore}&nbsp;&nbsp;&nbsp;</b></span>\n                                }\n                              <span className=\"awayTeam\">{match.awayTeam}</span>\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                    {item.matches.length === 0 && <tr><td><div className=\"noGames\"><span><b>No scheduled matches today.</b></span></div></td></tr>}\n                  </tbody>\n                </table>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Live;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport Score from \"../Score/Score\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div id=\"wrapper\">\n        <Switch>\n          <Route path=\"/home\" render={() => (\n            <div className=\"App\">\n              <Header />\n          </div>\n          )} />\n          <Route path=\"/score\" render={() => (\n            <div className=\"App\">\n              <Header />\n              <Score />\n          </div>\n          )} />\n          <Route path=\"/\" render={() => (\n            <div className=\"App\">\n              <Header />\n              <Score />\n          </div>\n          )} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}